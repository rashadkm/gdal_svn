# Find GRASS
#
# Once run this will define:
#
# GRASS_HOME_DIR         = full path to the GRASS home
#
# GRASS_FOUND           = system has GRASS lib
# GRASS_LIBRARIES       = GRASS libraries
# GRASS_INCLUDE_DIR     = where to find headers
#

FIND_PATH(GRASS_HOME_DIR "/include/grass/version.h" PATHS 
        ${GRASS_PREFIX}
        /usr/lib/grass
        /usr/lib64/grass64
        /usr/lib/grass64
        c:/msys/local
        /opt/grass
        $ENV{GRASS_PREFIX})
#MESSAGE(STATUS "GRASS_HOME_DIR = ${GRASS_HOME_DIR}")

SET(GRASS_INCLUDE_DIR "${GRASS_HOME_DIR}/include")

FILE(READ ${GRASS_INCLUDE_DIR}/grass/version.h VERSIONFILE)
STRING(REGEX MATCH "[0-9]+\\.[0-9]+\\.[^ ]+" GRASS_VERSION ${VERSIONFILE})
STRING(REGEX REPLACE "^([0-9]*)\\.[0-9]*\\..*$" "\\1" GRASS_MAJOR_VERSION ${GRASS_VERSION})
STRING(REGEX REPLACE "^[0-9]*\\.([0-9]*)\\..*$" "\\1" GRASS_MINOR_VERSION ${GRASS_VERSION})
STRING(REGEX REPLACE "^[0-9]*\\.[0-9]*\\.(.*)$" "\\1" GRASS_MICRO_VERSION ${GRASS_VERSION})
MATH( EXPR GRASS_NUM_VERSION "${GRASS_MAJOR_VERSION}*10000 + ${GRASS_MINOR_VERSION}*100 + ${GRASS_MICRO_VERSION}")
#MESSAGE(STATUS "GRASS_NUM_VERSION = ${GRASS_NUM_VERSION}")

SET(GRASS_MAJOR_VERSION  ${GRASS_MAJOR_VERSION} CACHE INTERNAL "")
SET(GRASS_MINOR_VERSION  ${GRASS_MINOR_VERSION} CACHE INTERNAL "")

SET (GRASS_LIB_SHORT_NAMES I gis dig2 dbmiclient dbmibase shape dgl rtree datetime linkm gproj)
IF (GRASS_MAJOR_VERSION LESS 7 )
    LIST(APPEND GRASS_LIB_SHORT_NAMES vect)
    LIST(APPEND GRASS_LIB_SHORT_NAMES form)
ELSE (GRASS_MAJOR_VERSION LESS 7 )
    LIST(APPEND GRASS_LIB_SHORT_NAMES vector)
    LIST(APPEND GRASS_LIB_SHORT_NAMES raster)
ENDIF (GRASS_MAJOR_VERSION LESS 7 )
#MESSAGE(STATUS "GRASS_LIB_SHORT_NAMES = ${GRASS_LIB_SHORT_NAMES}")

FOREACH (LIB ${GRASS_LIB_SHORT_NAMES})
    SET(GRASS_LIB_NAMES ${GRASS_LIB_NAMES} grass_${LIB})
ENDFOREACH (LIB)
#MESSAGE(STATUS "GRASS_LIB_NAMES = ${GRASS_LIB_NAMES}")

FIND_PATH(GRASS_LIB_DIR "grass_gis.lib" PATHS ${GRASS_HOME_DIR}/lib NO_DEFAULT_PATH)

FOREACH (LIB ${GRASS_LIB_NAMES})
    SET(LIB_PATH NOTFOUND)
    
    FIND_LIBRARY(LIB_PATH NAMES ${LIB} PATHS ${GRASS_LIB_DIR} NO_DEFAULT_PATH)
    IF (LIB_PATH)
        SET (GRASS_LIBRARIES ${GRASS_LIBRARIES} ${LIB_PATH})
   ELSE (LIB_PATH)
        SET(NOT_FOUND_GRASS_LIBRARIES ${GRASS_LIBRARIES} ${LIB})
    ENDIF (LIB_PATH)
ENDFOREACH (LIB)
UNSET(LIB_PATH CACHE)
#MESSAGE(STATUS "GRASS_LIBRARIES = ${GRASS_LIBRARIES}")

IF(NOT_FOUND_GRASS_LIBRARIES)
    SET(GRASS_FOUND FALSE)
    FOREACH (LIB ${NOT_FOUND_GRASS_LIBRARIES})
        MESSAGE(WARNING "Could NOT find library: ${LIB} in ${GRASS_LIB_DIR}")
    ENDFOREACH (LIB)
ELSE(NOT_FOUND_GRASS_LIBRARIES)
    SET(GRASS_FOUND TRUE)
ENDIF(NOT_FOUND_GRASS_LIBRARIES)
#MESSAGE(STATUS "GRASS_FOUND = ${GRASS_FOUND}")

IF (GRASS_FOUND)
    MESSAGE(STATUS "Found GRASS: ${GRASS_HOME_DIR}")
ELSE (GRASS_FOUND)
  IF (GRASS_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find GRASS")
  ENDIF (GRASS_FIND_REQUIRED)
ENDIF (GRASS_FOUND)
